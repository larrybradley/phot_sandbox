# GitHub Actions workflow for testing and continuous integration.
#
# The tests are run with tox and the test environments configured by
# tox.ini.
name: Tox matrix

on: [push, pull_request]

jobs:
  matrix_tests:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        exclude:
          - os: macos-latest
            python-version: [3.6, 3.7, 3.9]
          - os: windows-latest
            python-version: [3.6, 3.7, 3.9]

        tox-env: [alldeps-cov]
        #env:
        #TOXENV: ${{ steps.pyver.outputs.pyver }}-test-${{ matrix.tox-env }}
    steps:
      #- name: Define Python version
      #  id: pyver
      # run: |
      #   pyver=$(echo {{ matrix.python-version }} | tr -d '.')
      #   echo "::set-output name=id::$pyver"
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: ${{ env.TOXENV }} (${{ matrix.os }})
      run: echo $TOXENV
