# need to add i386 job

# GitHub Actions workflow for testing and continuous integration.
#
# The tests are run with tox and the test environments configured by
# tox.ini.
name: Tox matrix

on: [push, pull_request]

jobs:

  main_matrix:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        exclude:
          - os: macos-latest
            python-version: 3.6
          - os: macos-latest
            python-version: 3.7
          - os: macos-latest
            python-version: 3.9
          - os: windows-latest
            python-version: 3.6
          - os: windows-latest
            python-version: 3.7
          - os: windows-latest
            python-version: 3.9

            #env:
            #- TOXENV: alldeps-cov
        tox-env: ['alldeps-cov']
        #env:
        #TOXENV: ${{ steps.pyver.outputs.pyver }}-test-${{ matrix.tox-env }}
    steps:
    - if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      name: Define tox environment name
      id: toxenvorig
      run: |
        pyver=$(echo ${{ matrix.python-version }} | tr -d '.')
        toxenv=py$pyver-${{ matrix.tox-env }}
        echo "::set-output name=toxenv::$toxenv"
    - if: matrix.os == 'windows-latest'
      name: Define tox environment name
      id: toxenv
      run: |
        #$pyver = "${{ matrix.python-version }}" -replace '.', ''
        $pyver = "${{ matrix.python-version }}".replace('.', '')
        $toxenv="py$pyver-${{ matrix.tox-env }}"
        echo "::set-output name=toxenv::$toxenv"
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: ${{ steps.toxenv.outputs.toxenv }} (${{ matrix.os }})
      run: |
        # echo ${{ matrix.tox-env }}
        tox -e ${{ matrix.tox-env }}

  py38_matrix:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
        env:
          - TOXENV: test-alldeps-devdeps
          - TOXENV: codestyle
          - TOXENV: build_docs
          - TOXENV: linkcheck
    steps:
      #- name: Define Python version
      #  id: pyver
      # run: |
      #   pyver=$(echo {{ matrix.python-version }} | tr -d '.')
      #   echo "::set-output name=id::$pyver"
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
        apt-get install graphviz
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: ${{ matrix.env.TOXENV }} (${{ matrix.os }})
      run: |
        #echo ${{ matrix.env.TOXENV }}
        tox -e ${{ matrix.env.TOXENV }}

  astropy_lts:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6]
        env:
          - TOXENV: test-alldeps-astropylts-numpy117
    steps:
      #- name: Define Python version
      #  id: pyver
      # run: |
      #   pyver=$(echo {{ matrix.python-version }} | tr -d '.')
      #   echo "::set-output name=id::$pyver"
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: ${{ matrix.env.TOXENV }} (${{ matrix.os }})
      run: |
        #echo ${{ matrix.env.TOXENV }}
        tox -e ${{ matrix.env.TOXENV }}
