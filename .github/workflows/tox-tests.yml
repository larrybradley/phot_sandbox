# GitHub Actions workflow for testing and continuous integration.
#
# The tests are run with tox and the test environments configured by
# tox.ini.

name: Python Tests

on: [push, pull_request]

jobs:
  build:

    matrix_tests:
      runs-on: ${{ matrix.os }}
      if: "!contains(github.event.head_commit.message, '[skip ci]')"
      strategy:
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
          python-version: [3.6, 3.7, 3.8, 3.9]
          exclude:
            - os: macos-latest
              python-version: [3.6, 3.7, 3.9]
            - os: windows-latest
              python-version: [3.6, 3.7, 3.9]

          tox-env: [alldeps-cov]
      steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: py${{ matrix.python-version }}-test-${{ matrix.tox-env }} (${{ matrix.os }})
      run: tox -e py${{ matrix.python-version }}-test-${{ matrix.tox-env }}

      #
      # # This is an example of how to upload coverage to codecov
      # - name: Upload coverage to codecov
      #   if: matrix.tox-env == 'cov' && matrix.python-ver == '8'
      #   uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV }}
      #     file: ./coverage.xml
      #     fail_ci_if_error: true

    # Test with Astropy development version
    build_docs:
      runs-on: ubuntu-latest
      if: "!contains(github.event.head_commit.message, '[skip ci]')"
      steps:
      - uses: actions/checkout@v2
      - name: py38-test-alldeps-devdeps (ubuntu-latest)
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Testing building of docs using tox
        run: |
          tox -e py38-test-alldeps-devdeps

    # Test with Astropy LTS version
    build_docs:
      runs-on: ubuntu-latest
      if: "!contains(github.event.head_commit.message, '[skip ci]')"
      env:
        TOXENV: py36-test-alldeps-astropylts-numpy117
      steps:
      - uses: actions/checkout@v2
      - name: $TOXENV (ubuntu-latest)
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Testing building of docs using tox
        run: |
          tox -e py36-test-alldeps-astropylts-numpy117

    # Test building the documents
    build_docs:
      runs-on: ubuntu-latest
      if: "!contains(github.event.head_commit.message, '[skip ci]')"
      steps:
      - uses: actions/checkout@v2
      - name: build_docs (ubuntu-latest)
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Testing building of docs using tox
        run: |
          tox -e build_docs

    # Test links in the documents
    doc_test:
      runs-on: ubuntu-latest
      if: "!contains(github.event.head_commit.message, '[skip ci]')"
      steps:
      - uses: actions/checkout@v2
      - name: Set up Python to test links with Sphinx
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Check links in docs using tox
        run: |
          tox -e linkcheck

    # Perform codestyle check
    codestyle:
      runs-on: ubuntu-latest
      if: "!contains(github.event.head_commit.message, '[skip ci]')"
      steps:
      - uses: actions/checkout@v2
      - name: Python codestyle check
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Check codestyle using tox
        run: |
          tox -e codestyle
